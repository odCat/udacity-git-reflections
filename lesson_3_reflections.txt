Q: When would you want to use a remote repository rather than keeping all your work
local?
A: I save remotely when I work on something from multiple places/machines. Or when I
want to have the project backed up or when I want it public, for other to see.

Q: Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
A: Once you start working on a project you don't want it to change in ways it
might or might not affect your work. It is my opinion it is better to pull
manually after you are finished.

Q: Describe the differences between forks, clones and branches. When would
you use one instead of another?
A: Branches are made locally to explore different and possbily risky
development paths. Clones are copies of remote repositories. Forking is a
GitHub feature that is similar to cloning, but keeps the fork repository
permanently linked to the initial project. That way the original developer
gets recognition.

Q: What is the benefit of having a copy of the last known state of the remote
stored locally?
A: The benefit is that you can see if the last state of the remote is
compatible with your changes.

Q: How would you collaborate without using Git or GitHub? What would be
easier, and what would be harder?
A: I would send my changes through email and have the project maintainer
merge them. It is much easier with Git and GitHub.

Q: When would you want to make changes in a separate branch rather than in
master? What benefits does each approach have?
A: I would use a separate branch when the changes are to radical or
experimental. Using separate branches can be safer, while commiting to main
is more straightforward.
